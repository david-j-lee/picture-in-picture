<Window x:Class="PictureInPicture.Views.CropperWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:fa5="http://schemas.fontawesome.com/icons/"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:viewModels="clr-namespace:PictureInPicture.ViewModels"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  mc:Ignorable="d"
  AllowsTransparency="True"
  WindowStyle="None"
  ResizeMode="NoResize"
  Top="{Binding WindowTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  Left="{Binding WindowLeft, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  Width="{Binding WindowWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  Height="{Binding WindowHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  Title="{Binding Title, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

  <Window.DataContext>
    <viewModels:CropperViewModel/>
  </Window.DataContext>

  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Closing">
      <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
    </i:EventTrigger>
  </i:Interaction.Triggers>

  <Window.Resources>
    <ResourceDictionary>
      <system:Double x:Key="Opacity">0.75</system:Double>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Generic.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>

  <Window.Background>
    <SolidColorBrush Opacity="0"
      Color="White"/>
  </Window.Background>

  <Canvas x:Name="LayoutRoot"
    Margin="{Binding CanvasMargin, UpdateSourceTrigger=PropertyChanged}">

    <Grid Canvas.ZIndex="2"
      HorizontalAlignment="Center"
      Margin="10"
      Width="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}">
      <Border CornerRadius="4"
        Background="{StaticResource Background}"
        Margin="0, 3"
        HorizontalAlignment="Center">
        <StackPanel Orientation="Horizontal"
          HorizontalAlignment="Center">
          <Button ToolTip="{StaticResource SetupFocusedWindow}"
            Command="{Binding }"
            Margin="5, 5, 1, 5"
            Height="30"
            Width="30">
            <fa5:SvgAwesome Icon="Solid_Check"
              Width="12"
              Foreground="White"
              VerticalAlignment="Center"
              HorizontalAlignment="Center" />
          </Button>
          <!-- TODO: Add support for clicking to do initial setup. then this would toggle between the two modes -->
          <!-- <Button ToolTip="{StaticResource SetupFocusedWindow}"
            Margin="1, 5, 1, 5"
            Height="30"
            Width="30">
            <fa5:SvgAwesome Icon="Solid_VectorSquare"
              Width="12"
              Foreground="White"
              VerticalAlignment="Center"
              HorizontalAlignment="Center" />
          </Button> -->
          <TextBlock Foreground="{StaticResource TextColorDim}"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Margin="5, 0">|</TextBlock>
          <Button ToolTip="{StaticResource SetupFocusedWindow}"
            Command="{Binding CloseCommand}"
            Margin="1, 5, 5, 5"
            Height="30"
            Width="30">
            <fa5:SvgAwesome Icon="Solid_Times"
              Width="12"
              Foreground="White"
              VerticalAlignment="Center"
              HorizontalAlignment="Center" />
          </Button>
        </StackPanel>
      </Border>
    </Grid>

    <Rectangle x:Name="HideTop"
      Canvas.ZIndex="1"
      Canvas.Top="0"
      Canvas.Left="0"
      Opacity="{StaticResource Opacity}"
      Fill="Black"
      Width="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}"
      Height="{Binding (Canvas.Top), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"/>
    <Rectangle x:Name="HideLeft"
      Canvas.Top="{Binding (Canvas.Top), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
      Canvas.Left="0"
      Opacity="{StaticResource Opacity}"
      Fill="Black"
      Width="{Binding (Canvas.Left), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
      Height="{Binding ActualHeight, ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"/>
    <Rectangle x:Name="HideBottom"
      Canvas.Bottom="0"
      Canvas.Left="0"
      Opacity="{StaticResource Opacity}"
      Fill="Black"
      Width="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}"
      Height="{Binding (Canvas.Bottom), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}" />
    <Rectangle x:Name="HideRight"
      Canvas.Top="{Binding (Canvas.Top), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
      Canvas.Right="0"
      Opacity="{StaticResource Opacity}"
      Fill="Black"
      Width="{Binding (Canvas.Right), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
      Height="{Binding ActualHeight, ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}" />

    <ContentControl x:Name="Cropper"
      MinHeight="{Binding MinHeight, UpdateSourceTrigger=PropertyChanged}"
      MinWidth="{Binding MinWidth, UpdateSourceTrigger=PropertyChanged}"
      Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
      Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
      MaxHeight="{Binding MaxHeight, UpdateSourceTrigger=PropertyChanged}"
      MaxWidth="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}"
      Canvas.Top="{Binding Top, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
      Canvas.Left="{Binding Left, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
      Canvas.Bottom="{Binding Bottom, UpdateSourceTrigger=PropertyChanged}"
      Canvas.Right="{Binding Right, UpdateSourceTrigger=PropertyChanged}"
      Selector.IsSelected="True"
      Style="{StaticResource MoveResize}">
      <Rectangle Fill="White"
        Stretch="Fill"
        Opacity="0.01"
        IsHitTestVisible="False"/>
    </ContentControl>
  </Canvas>

</Window>
